"use strict";

const winston = require('winston');
const Promise = require('bluebird');

/**
* Export functions for OpenAPISpec
*/
var SwaggerExporter = function () {
};

let convertNodeToPathItem = function(node) {
  const validMethods = ['get', 'put', 'post', 'delete', 'options', 'head', 'patch'];
  let pathItem = {};
  Object.keys(node.data).forEach( (key) => {
    if( validMethods.indexOf(key) < 0 ) {
      // this is not a valid key
      winston.log('warn', 'unable to convert response method ' + key + ' into OpenAPI Spec');
    }else {
      let responseData = {};
      let nodeResponseData = node.data[key];

      responseData.description = "auto generated by Rapido";
      responseData.produces = [nodeResponseData.contentType];
      responseData.responses = {
        "200" : {
          "description": "auto generated by Rapido"
        }
      };
      pathItem[key] = responseData;
    }
  });

  return pathItem;
}

SwaggerExporter.prototype.exportTree = function(tree, title, description) {
  let swaggerDoc = {json: {}, yaml: ''};

  let info = {
    title: (title ? title : ''),
    description: description,
    version: 'rapido-sketch'
  };

  // Build path objects based on the tree structure
  let paths = {

  }

  tree.rootNodes.forEach( rootNode => {
    let pathInfo = convertNodeToPathItem(rootNode);
    paths[rootNode.fullpath] = pathInfo;
  })



  swaggerDoc.json = {
    swagger: "2.0",
    info: info,
    paths: paths
  }

  return swaggerDoc;
}

module.exports = SwaggerExporter;
